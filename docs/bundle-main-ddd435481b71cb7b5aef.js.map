{"version":3,"sources":["webpack://Demo/./node_modules/performance-now/lib/performance-now.js","webpack://Demo/webpack/bootstrap","webpack://Demo/webpack/runtime/compat get default export","webpack://Demo/webpack/runtime/define property getters","webpack://Demo/webpack/runtime/hasOwnProperty shorthand","webpack://Demo/webpack/runtime/make namespace object","webpack://Demo/./src/Color.js","webpack://Demo/./src/index.js","webpack://Demo/./src/rm-07.vert","webpack://Demo/./src/rm-07.frag"],"names":["getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","now","module","exports","process","hr","uptime","Date","getTime","call","this","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","value","colorRegExp","hex","s","toString","length","hue2rgb","p","q","t","canvas","gl","vao","program","u_time","u_resolution","u_mouse","u_palette","u_env","mouseDown","startX","startY","canvasBounds","envTexture","Color","g","b","color","m","exec","col","parseInt","substring","factor","Array","isArray","array","Float32Array","f","off","i","from","validate","Error","h","l","Math","round","other","ratio","out","config","sqrt","PI","width","height","mouseX","mouseY","resize","window","innerWidth","innerHeight","style","viewport","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","main","time","uniform1f","perfNow","uniform2f","uniform4f","clearColor","clear","COLOR_BUFFER_BIT","primitiveType","TRIANGLES","drawArrays","requestAnimationFrame","onMouseMove","ev","clientX","left","self","pageXOffset","clientY","top","pageYOffset","onMouseDown","onMouseUp","onload","document","getElementById","getContext","parentNode","removeChild","innerHTML","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","positionAttributeLocation","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","createVertexArray","bindVertexArray","enableVertexAttribArray","FLOAT","vertexAttribPointer","createTexture","envImage","log","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","getUniformLocation","useProgram","addEventListener","getBoundingClientRect","paletteArray","uniform3fv","activeTexture","TEXTURE0","uniform1i"],"mappings":"4CACA,WACE,IAAIA,EAAgBC,EAAQC,EAAUC,EAAgBC,EAAcC,EAExC,oBAAhBC,aAA+C,OAAhBA,aAAyBA,YAAYC,IAC9EC,EAAOC,QAAU,WACf,OAAOH,YAAYC,OAEQ,oBAAZG,SAAuC,OAAZA,SAAqBA,QAAQT,QACzEO,EAAOC,QAAU,WACf,OAAQT,IAAmBI,GAAgB,KAE7CH,EAASS,QAAQT,OAMjBE,GALAH,EAAiB,WACf,IAAIW,EAEJ,OAAe,KADfA,EAAKV,KACK,GAAWU,EAAG,OAG1BN,EAA4B,IAAnBK,QAAQE,SACjBR,EAAeD,EAAiBE,GACvBQ,KAAKN,KACdC,EAAOC,QAAU,WACf,OAAOI,KAAKN,MAAQL,GAEtBA,EAAWW,KAAKN,QAEhBC,EAAOC,QAAU,WACf,OAAO,IAAII,MAAOC,UAAYZ,GAEhCA,GAAW,IAAIW,MAAOC,aAGvBC,KAAKC,QChCJC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUV,QAG3C,IAAID,EAASS,EAAyBE,GAAY,CAGjDV,QAAS,IAOV,OAHAW,EAAoBD,GAAUJ,KAAKP,EAAOC,QAASD,EAAQA,EAAOC,QAASS,GAGpEV,EAAOC,QCnBfS,EAAoBG,EAAI,SAASb,GAChC,IAAIc,EAASd,GAAUA,EAAOe,WAC7B,WAAa,OAAOf,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADAU,EAAoBM,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRJ,EAAoBM,EAAI,SAASf,EAASiB,GACzC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEnB,EAASkB,IAC5EE,OAAOC,eAAerB,EAASkB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ET,EAAoBU,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAerB,KAAKkB,EAAKC,ICC/FhB,EAAoBmB,EAAI,SAAS5B,GACX,oBAAX6B,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAerB,EAAS6B,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAerB,EAAS,aAAc,CAAE+B,OAAO,K,oOCLvD,IAAMC,EAAc,qBAEpB,SAASC,EAAIrB,GAET,IAAMsB,EAAItB,EAAEuB,SAAS,IAErB,OAAoB,IAAbD,EAAEE,OAAe,IAAMF,EAAIA,EAGtC,SAASG,EAAQC,EAAGC,EAAGC,GAGnB,OAFGA,EAAI,IAAGA,GAAK,GACZA,EAAI,IAAGA,GAAK,GACZA,EAAI,EAAE,EAAUF,EAAc,GAATC,EAAID,GAASE,EAClCA,EAAI,GAAYD,EAChBC,EAAI,EAAE,EAAUF,GAAKC,EAAID,IAAM,EAAE,EAAIE,GAAK,EACtCF,E,ICIPG,EAAQC,EAAIC,EAAKC,EAIjBC,EAEAC,EAEAC,EAEAC,EAEAC,EAEwBC,EAAWC,EAAQC,EAG3CC,EAEAC,EDpBiBC,E,WAMjB,WAAY3B,EAAE4B,EAAEC,I,4FAChB,cALA7B,OAKA,OAJA4B,OAIA,OAHAC,OAGA,EACIlD,KAAKqB,EAAIA,EACTrB,KAAKiD,EAAIA,EACTjD,KAAKkD,EAAIA,E,8CAuCb,SAAgBC,GAGZ,IAAIC,EACJ,GAAqB,iBAAVD,KAAwBC,EAAI3B,EAAY4B,KAAKF,IAEpD,OAAO,KAEX,IAAMG,EAAMF,EAAE,GAEd,OAAmB,IAAfE,EAAIzB,OAEG,IAAImB,EACgB,GAAvBO,SAASD,EAAI,GAAI,IACM,GAAvBC,SAASD,EAAI,GAAI,IACM,GAAvBC,SAASD,EAAI,GAAI,KAGD,IAAfA,EAAIzB,OAEF,IAAImB,EACPO,SAASD,EAAIE,UAAU,EAAG,GAAI,IAC9BD,SAASD,EAAIE,UAAU,EAAG,GAAI,IAC9BD,SAASD,EAAIE,UAAU,EAAG,GAAI,KAK3B,O,kBAIf,SAAYL,GACZ,IADmBM,EACnB,uDAD4B,EAExB,GAAIC,MAAMC,QAAQR,GAClB,CAOI,IANA,IAAMtB,EAASsB,EAAMtB,OACf+B,EAAQ,IAAIC,aAAsB,EAAThC,GAEzBiC,EAAIL,EAAO,IAEbM,EAAM,EACDC,EAAI,EAAGA,EAAInC,EAAQmC,IAC5B,CACI,IAAMV,EAAMN,EAAMiB,KAAKd,EAAMa,IAC7BJ,EAAMG,KAAST,EAAIjC,EAAIyC,EACvBF,EAAMG,KAAST,EAAIL,EAAIa,EACvBF,EAAMG,KAAST,EAAIJ,EAAIY,EAG3B,OAAOF,EAGX,IAAMN,EAAMN,EAAMkB,SAASf,GAE3B,IAAKG,EAED,MAAM,IAAIa,MAAM,iBAAmBhB,GAOvC,OAJAG,EAAIjC,GAAKoC,EACTH,EAAIL,GAAKQ,EACTH,EAAIJ,GAAKO,EAEFH,I,qBAGX,SAAec,EAAEzC,EAAE0C,GAEf,IAAIhD,EAAG4B,EAAGC,EAEV,GAAGvB,GAAK,EACJN,EAAI4B,EAAIC,EAAImB,MACX,CAED,IAAMrC,EAAIqC,EAAI,GAAMA,GAAK,EAAI1C,GAAK0C,EAAI1C,EAAI0C,EAAI1C,EACxCI,EAAI,EAAIsC,EAAIrC,EAClBX,EAAIS,EAAQC,EAAGC,EAAGoC,EAAI,EAAE,GACxBnB,EAAInB,EAAQC,EAAGC,EAAGoC,GAClBlB,EAAIpB,EAAQC,EAAGC,EAAGoC,EAAI,EAAE,GAG5B,OAAO,IAAIpB,EACPsB,KAAKC,MAAU,IAAJlD,GACXiD,KAAKC,MAAU,IAAJtB,GACXqB,KAAKC,MAAU,IAAJrB,Q,oBAzHnB,SAAIsB,EAAOC,EAAOC,GAUd,OARKA,IAEDA,EAAM,IAAI1B,GAEd0B,EAAIrD,EAAKrB,KAAKqB,GAAKmD,EAAMnD,EAAIrB,KAAKqB,GAAKoD,EAAO,EAC9CC,EAAIzB,EAAKjD,KAAKiD,GAAKuB,EAAMvB,EAAIjD,KAAKiD,GAAKwB,EAAO,EAC9CC,EAAIxB,EAAKlD,KAAKkD,GAAKsB,EAAMtB,EAAIlD,KAAKkD,GAAKuB,EAAO,EAEvCC,I,sBAGX,SAASrE,EAAGqE,GAUR,OARKA,IAEDA,EAAM,IAAI1B,GAGd0B,EAAIrD,EAAIrB,KAAKqB,EAAIhB,EACjBqE,EAAIzB,EAAIjD,KAAKiD,EAAI5C,EACjBqE,EAAIxB,EAAIlD,KAAKkD,EAAI7C,EACVqE,I,sBAGX,WAEI,MAAO,IAAMhD,EAAI1B,KAAKqB,GAAKK,EAAI1B,KAAKiD,GAAKvB,EAAI1B,KAAKkD,K,mBAGtD,WAEI,OAAQlD,KAAKqB,GAAK,KAAOrB,KAAKiD,GAAK,GAAKjD,KAAKkD,O,gCClD/CyB,GAJWL,KAAKM,KAAK,GACfN,KAAKO,GAGF,CACXC,MAAO,EACPC,OAAQ,IAiBRC,EAAS,EAAGC,EAAS,EAOzB,SAASC,IAEL,IAAMJ,EAASK,OAAOC,WAAW,GAAK,GAChCL,EAAUI,OAAOE,YAAY,EAAK,EAExCV,EAAOG,MAAQA,EACfH,EAAOI,OAASA,EAEhB7C,EAAO4C,MAAQA,EACf5C,EAAO6C,OAASA,EAEhBC,EAASF,EAAM,EACfG,EAASF,EAAO,EAEhB7C,EAAOoD,MAAMR,MAAQK,OAAOC,WAAa,KACzClD,EAAOoD,MAAMP,OAASI,OAAOE,YAAc,KAE3ClD,EAAGoD,SAAS,EAAG,EAAGrD,EAAO4C,MAAO5C,EAAO6C,QAG3C,SAASS,EAAarD,EAAIsD,EAAMC,GAC5B,IAAMC,EAASxD,EAAGqD,aAAaC,GAI/B,GAHAtD,EAAGyD,aAAaD,EAAQD,GACxBvD,EAAG0D,cAAcF,GACDxD,EAAG2D,mBAAmBH,EAAQxD,EAAG4D,gBAE7C,OAAOJ,EAGXK,QAAQC,MAAM9D,EAAG+D,iBAAiBP,IAClCxD,EAAGgE,aAAaR,GAyBpB,SAASS,EAAKC,GAEV,IAAMvC,EAAInB,EAAY,GAAK,EAG3BR,EAAGmE,UAAUhE,EAAQiE,MAAY,KACjCpE,EAAGqE,UAAUjE,EAAcoC,EAAOG,MAAOH,EAAOI,QAChD5C,EAAGsE,UAAUjE,EAASwC,EAAQL,EAAOI,OAASE,EAAQrC,EAASkB,GAAIa,EAAOI,OAASlC,GAAUiB,GAE7F3B,EAAGuE,WAAW,EAAG,EAAG,EAAG,GACvBvE,EAAGwE,MAAMxE,EAAGyE,kBAEZ,IAAMC,EAAgB1E,EAAG2E,UAGzB3E,EAAG4E,WAAWF,EAFC,EACD,GAGdG,sBAAsBZ,GAoI1B,SAASa,EAAYC,GAEbvE,IAEAqC,EAAUkC,EAAGC,QAAUrE,EAAasE,KAAQC,KAAKC,YACjDrC,EAAUiC,EAAGK,QAAUzE,EAAa0E,IAAOH,KAAKI,aAIxD,SAASC,EAAYR,GAEjBvE,GAAY,EACZC,EAAUsE,EAAGC,QAAUrE,EAAasE,KAAQC,KAAKC,YACjDzE,EAAUqE,EAAGK,QAAUzE,EAAa0E,IAAOH,KAAKI,YAChDzC,EAASpC,EACTqC,EAASpC,EAGb,SAAS8E,EAAUT,GAEfvE,GAAY,EApJhBwC,OAAOyC,OAAS,WAKZ,GAHA1F,EAAS2F,SAASC,eAAe,YAEjC3F,EAAKD,EAAO6F,WAAW,WAInB,OAFA7F,EAAO8F,WAAWC,YAAY/F,GACnB,gEA/Bf2F,SAASC,eAAe,OAAOI,UAAY,mEAF/C,IAuCUC,EAAe3C,EAAarD,EAAIA,EAAGiG,cCjI7C,mVDkIUC,EAAiB7C,EAAarD,EAAIA,EAAGmG,gBElI/C,q3FFqIIjG,EA3DJ,SAAuBF,EAAIgG,EAAcE,GACrC,IAAMhG,EAAUF,EAAGoG,gBAKnB,GAJApG,EAAGqG,aAAanG,EAAS8F,GACzBhG,EAAGqG,aAAanG,EAASgG,GACzBlG,EAAGsG,YAAYpG,GACCF,EAAGuG,oBAAoBrG,EAASF,EAAGwG,aAE/C,OAAOtG,EAGX2D,QAAQC,MAAM9D,EAAGyG,kBAAkBvG,IACnCF,EAAG0G,cAAcxG,GAgDPkG,CAAcpG,EAAIgG,EAAcE,GAG1C,IAAMS,EAA4B3G,EAAG4G,kBAAkB1G,EAAS,cAG1D2G,EAAiB7G,EAAG8G,eAG1B9G,EAAG+G,WAAW/G,EAAGgH,aAAcH,GAU/B7G,EAAGiH,WAAWjH,EAAGgH,aAAc,IAAItF,aARjB,EACb,GAAI,EACJ,GAAI,GACJ,EAAG,GACH,EAAG,EACH,EAAG,EACH,GAAG,IAEoD1B,EAAGkH,aAG/DjH,EAAMD,EAAGmH,oBAGTnH,EAAGoH,gBAAgBnH,GAGnBD,EAAGqH,wBAAwBV,GAG3B,IACMrD,EAAOtD,EAAGsH,MAIhBtH,EAAGuH,oBACCZ,EANS,EAMwBrD,GAJnB,EACH,EACF,GAKbP,IAGA/C,EAAGoD,SAAS,EAAG,EAAGpD,EAAGD,OAAO4C,MAAO3C,EAAGD,OAAO6C,QAG7ChC,EAAaZ,EAAGwH,gBAEhB,IAAMC,EAAW/B,SAASC,eAAe,OAEzC9B,QAAQ6D,IAAI,CAACD,aAEbzH,EAAG2H,YAAY3H,EAAG4H,WAAYhH,GAC9BZ,EAAG6H,WAAW7H,EAAG4H,WAAY,EAAG5H,EAAG8H,KAAM,KAAM,KAAM,EAAG9H,EAAG8H,KAAM9H,EAAG+H,cAAeN,GACnFzH,EAAGgI,cAAchI,EAAG4H,WAAY5H,EAAGiI,mBAAoBjI,EAAGkI,QAC1DlI,EAAGgI,cAAchI,EAAG4H,WAAY5H,EAAGmI,mBAAoBnI,EAAGoI,uBAC1DpI,EAAGqI,eAAerI,EAAG4H,YACrB5H,EAAG2H,YAAY3H,EAAG4H,WAAY,MAG9BzH,EAASH,EAAGsI,mBAAmBpI,EAAS,UACxCE,EAAeJ,EAAGsI,mBAAmBpI,EAAS,gBAC9CG,EAAUL,EAAGsI,mBAAmBpI,EAAS,WACzCI,EAAYN,EAAGsI,mBAAmBpI,EAAS,aAC3CK,EAAQP,EAAGsI,mBAAmBpI,EAAS,SAGvCF,EAAGuI,WAAWrI,GAGdF,EAAGoH,gBAAgBnH,GAEnB+C,OAAOwF,iBAAiB,SAAUzF,GAAQ,GAC1ChD,EAAOyI,iBAAiB,YAAa1D,GAAa,GAClD/E,EAAOyI,iBAAiB,YAAajD,GAAa,GAClDG,SAAS8C,iBAAiB,UAAWhD,GAAW,GAGhDxC,OAAOwF,iBAAiB,aAAcjD,GAAa,GACnDvC,OAAOwF,iBAAiB,YAAa1D,GAAa,GAClD9B,OAAOwF,iBAAiB,WAAYhD,GAAW,GAE/C7E,EAAe+E,SAASC,eAAe,UAAU8C,wBAEjD,IAAMC,EAAe7H,EAAMiB,KACvB,CACI,UACA,OACA,OACA,UACA,UACA,OACA,OACA,QAEJ,GAIJ9B,EAAG2I,WAAWrI,EAAWoI,GAEzB1I,EAAG4I,cAAc5I,EAAG6I,UACpB7I,EAAG2H,YAAY3H,EAAG4H,WAAYhH,GAC9BZ,EAAG8I,UAAUvI,EAAO,GAEpBsE,sBAAsBZ,I","file":"bundle-main-ddd435481b71cb7b5aef.js","sourcesContent":["// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const colorRegExp = /^(#)?([0-9a-f]+)$/i;\n\nfunction hex(n)\n{\n    const s = n.toString(16);\n\n    return s.length === 1 ? \"0\" + s : s;\n}\n\nfunction hue2rgb(p, q, t){\n    if(t < 0) t += 1;\n    if(t > 1) t -= 1;\n    if(t < 1/6) return p + (q - p) * 6 * t;\n    if(t < 1/2) return q;\n    if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n    return p;\n}\n\nexport default class Color\n{\n    r;\n    g;\n    b;\n\n    constructor(r,g,b)\n    {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n\n    mix(other, ratio, out)\n    {\n        if (!out)\n        {\n            out = new Color();\n        }\n        out.r = (this.r + (other.r - this.r) * ratio)|0;\n        out.g = (this.g + (other.g - this.g) * ratio)|0;\n        out.b = (this.b + (other.b - this.b) * ratio)|0;\n\n        return out;\n    }\n\n    multiply(n, out)\n    {\n        if (!out)\n        {\n            out = new Color();\n        }\n\n        out.r = this.r * n;\n        out.g = this.g * n;\n        out.b = this.b * n;\n        return out;\n    }\n\n    toRGBHex()\n    {\n        return \"#\" + hex(this.r) + hex(this.g) + hex(this.b );\n    }\n\n    toHex()\n    {\n        return (this.r << 16) + (this.g << 8) + this.b;\n    }\n\n    static validate(color)\n    {\n\n        let m;\n        if (typeof color !== \"string\" || !(m = colorRegExp.exec(color)))\n        {\n            return null;\n        }\n        const col = m[2];\n\n        if (col.length === 3)\n        {\n            return new Color(\n                parseInt(col[0], 16) * 17,\n                parseInt(col[1], 16) * 17,\n                parseInt(col[2], 16) * 17\n            )\n        }\n        else if (col.length === 6)\n        {\n            return new Color(\n                parseInt(col.substring(0, 2), 16),\n                parseInt(col.substring(2, 4), 16),\n                parseInt(col.substring(4, 6), 16)\n            )\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    static from(color, factor = 1.0)\n    {\n        if (Array.isArray(color))\n        {\n            const length = color.length;\n            const array = new Float32Array(length * 3);\n\n            const f = factor/255;\n\n            let off = 0;\n            for (let i = 0; i < length; i++)\n            {\n                const col = Color.from(color[i]);\n                array[off++] = col.r * f;\n                array[off++] = col.g * f;\n                array[off++] = col.b * f;\n            }\n\n            return array;\n        }\n\n        const col = Color.validate(color);\n\n        if (!col)\n        {\n            throw new Error(\"Invalid color \" + color);\n        }\n\n        col.r *= factor;\n        col.g *= factor;\n        col.b *= factor;\n\n        return col;\n    }\n\n    static fromHSL(h,s,l)\n    {\n        let r, g, b;\n\n        if(s <= 0){\n            r = g = b = l; // achromatic\n        }else{\n\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1/3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1/3);\n        }\n\n        return new Color(\n            Math.round(r * 255),\n            Math.round(g * 255),\n            Math.round(b * 255)\n        );\n    }\n}\n\n","// noinspection ES6UnusedImports\nimport STYLE from \"./style.css\"\nimport perfNow from \"performance-now\"\n\nimport vertexShaderSource from \"./rm-07.vert\"\nimport fragmentShaderSource from \"./rm-07.frag\"\nimport Color from \"./Color\";\n\n//console.log(fragmentShaderSource)\n\nconst PHI = (1 + Math.sqrt(5)) / 2;\nconst TAU = Math.PI * 2;\nconst DEG2RAD_FACTOR = TAU / 360;\n\nconst config = {\n    width: 0,\n    height: 0\n};\n\nlet canvas, gl, vao, program;\n\n\n// uniform: current time\nlet u_time;\n\nlet u_resolution;\n\nlet u_mouse;\n\nlet u_palette;\n\nlet u_env;\n\nlet mouseX = 0, mouseY = 0, mouseDown, startX, startY;\n\n// Get the container element's bounding box\nlet canvasBounds;\n\nlet envTexture;\n\nfunction resize()\n{\n    const width = (window.innerWidth/2) & ~15;\n    const height = (window.innerHeight/2) | 0;\n\n    config.width = width;\n    config.height = height;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    mouseX = width/2;\n    mouseY = height/2;\n\n    canvas.style.width = window.innerWidth + \"px\";\n    canvas.style.height = window.innerHeight + \"px\";\n\n    gl.viewport(0, 0, canvas.width, canvas.height);\n}\n\nfunction createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n\n    console.error(gl.getShaderInfoLog(shader));  // eslint-disable-line\n    gl.deleteShader(shader);\n    return undefined;\n}\n\nfunction createProgram(gl, vertexShader, fragmentShader) {\n    const program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n\n    console.error(gl.getProgramInfoLog(program));  // eslint-disable-line\n    gl.deleteProgram(program);\n    return undefined;\n}\n\n\nfunction printError(msg)\n{\n    document.getElementById(\"out\").innerHTML = \"<p>\" + msg + \"</p>\";\n}\n\nfunction main(time)\n{\n    const f = mouseDown ? 1 : -1;\n\n    // update uniforms\n    gl.uniform1f(u_time, perfNow() / 1000.0);\n    gl.uniform2f(u_resolution, config.width, config.height);\n    gl.uniform4f(u_mouse, mouseX, config.height - mouseY, startX * f, (config.height - startY) * f);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    // draw\n    const primitiveType = gl.TRIANGLES;\n    const offset = 0;\n    const count = 6;\n    gl.drawArrays(primitiveType, offset, count);\n\n    requestAnimationFrame(main);\n}\n\n\nwindow.onload = () => {\n    // Get A WebGL context\n    canvas = document.getElementById(\"screen\");\n\n    gl = canvas.getContext(\"webgl2\");\n    if (!gl) {\n        canvas.parentNode.removeChild(canvas);\n        printError(\"Cannot run shader. Your browser does not support WebGL2.\");\n        return;\n    }\n\n\n    // create GLSL shaders, upload the GLSL source, compile the shaders\n    const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n    const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    // Link the two shaders into a program\n    program = createProgram(gl, vertexShader, fragmentShader);\n\n    // look up where the vertex data needs to go.\n    const positionAttributeLocation = gl.getAttribLocation(program, \"a_position\");\n\n    // Create a buffer and put three 2d clip space points in it\n    const positionBuffer = gl.createBuffer();\n\n    // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n    const positions = [\n        -1, -1,\n         1, -1,\n        -1, 1,\n        -1, 1,\n         1, 1,\n         1,-1\n    ];\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n    // Create a vertex array object (attribute state)\n    vao = gl.createVertexArray();\n\n    // and make it the one we're currently working with\n    gl.bindVertexArray(vao);\n\n    // Turn on the attribute\n    gl.enableVertexAttribArray(positionAttributeLocation);\n\n    // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\n    const size = 2;          // 2 components per iteration\n    const type = gl.FLOAT;   // the data is 32bit floats\n    const normalize = false; // don't normalize the data\n    const stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\n    let offset = 0;        // start at the beginning of the buffer\n    gl.vertexAttribPointer(\n        positionAttributeLocation, size, type, normalize, stride, offset);\n\n\n    resize();\n\n    // Tell WebGL how to convert from clip space to pixels\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    //gl.enable(gl.TEXTURE_2D);\n    envTexture = gl.createTexture();\n\n    const envImage = document.getElementById(\"env\");\n\n    console.log({envImage});\n\n    gl.bindTexture(gl.TEXTURE_2D, envTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 4096, 2048, 0, gl.RGBA, gl.UNSIGNED_BYTE, envImage);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n\n    u_time = gl.getUniformLocation(program, \"u_time\");\n    u_resolution = gl.getUniformLocation(program, \"u_resolution\");\n    u_mouse = gl.getUniformLocation(program, \"u_mouse\");\n    u_palette = gl.getUniformLocation(program, \"u_palette\");\n    u_env = gl.getUniformLocation(program, \"u_env\");\n\n    // Tell it to use our program (pair of shaders)\n    gl.useProgram(program);\n\n    // Bind the attribute/buffer set we want.\n    gl.bindVertexArray(vao);\n\n    window.addEventListener(\"resize\", resize, true);\n    canvas.addEventListener(\"mousemove\", onMouseMove, true);\n    canvas.addEventListener(\"mousedown\", onMouseDown, true);\n    document.addEventListener(\"mouseup\", onMouseUp, true);\n\n\n    window.addEventListener(\"touchstart\", onMouseDown, true)\n    window.addEventListener(\"touchmove\", onMouseMove, true)\n    window.addEventListener(\"touchend\", onMouseUp, true)\n\n    canvasBounds = document.getElementById(\"screen\").getBoundingClientRect();\n\n    const paletteArray = Color.from(\n        [\n            \"#010101\",\n            \"#fff\",\n            \"#fff\",\n            \"#014d9d\",\n            \"#666666\",\n            \"#fff\",\n            \"#f0f\",\n            \"#0f0\"\n        ],\n        1\n    );\n\n\n    gl.uniform3fv(u_palette, paletteArray);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, envTexture);\n    gl.uniform1i(u_env, 0);\n\n    requestAnimationFrame(main)\n}\n\n\n// Apply the mouse event listener\n\nfunction onMouseMove(ev)\n{\n    if (mouseDown)\n    {\n        mouseX = (ev.clientX - canvasBounds.left) + self.pageXOffset;\n        mouseY = (ev.clientY - canvasBounds.top) + self.pageYOffset;\n    }\n}\n\nfunction onMouseDown(ev)\n{\n    mouseDown = true;\n    startX = (ev.clientX - canvasBounds.left) + self.pageXOffset;\n    startY = (ev.clientY - canvasBounds.top) + self.pageYOffset;\n    mouseX = startX;\n    mouseY = startY;\n}\n\nfunction onMouseUp(ev)\n{\n    mouseDown = false;\n}\n\n","export default \"#version 300 es\\n#define GLSLIFY 1\\n\\n// an attribute is an input (in) to a vertex shader.\\n// It will receive data from a buffer\\nin vec4 a_position;\\n\\n// all shaders have a main function\\nvoid main() {\\n\\n    // gl_Position is a special variable a vertex shader\\n    // is responsible for setting\\n    gl_Position = a_position;\\n}\\n\";","export default \"#version 300 es\\nprecision lowp float;\\n#define GLSLIFY 1\\n\\nuniform float u_time;\\nuniform vec2 u_resolution;\\nuniform vec4 u_mouse;\\nuniform vec3 u_palette[8];\\nuniform sampler2D u_env;\\n\\nconst float pi = 3.141592653589793;\\nconst float tau = pi * 2.0;\\nconst float invTau = 1.0 / tau;\\nconst float hpi = pi * 0.5;\\nconst float phi = (1.0+sqrt(5.0))/2.0;\\n\\nout vec4 outColor;\\n\\n////////////////////// NOISE\\n\\n//\\tSimplex 3D Noise\\n//\\tby Ian McEwan, Ashima Arts\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\n\\nfloat snoise(vec3 v){\\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n    // First corner\\n    vec3 i  = floor(v + dot(v, C.yyy) );\\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n    // Other corners\\n    vec3 g = step(x0.yzx, x0.xyz);\\n    vec3 l = 1.0 - g;\\n    vec3 i1 = min( g.xyz, l.zxy );\\n    vec3 i2 = max( g.xyz, l.zxy );\\n\\n    //  x0 = x0 - 0. + 0.0 * C\\n    vec3 x1 = x0 - i1 + 1.0 * C.xxx;\\n    vec3 x2 = x0 - i2 + 2.0 * C.xxx;\\n    vec3 x3 = x0 - 1. + 3.0 * C.xxx;\\n\\n    // Permutations\\n    i = mod(i, 289.0 );\\n    vec4 p = permute( permute( permute(\\n    i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n    + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n    + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n    // Gradients\\n    // ( N*N points uniformly over a square, mapped onto an octahedron.)\\n    float n_ = 1.0/7.0; // N=7\\n    vec3  ns = n_ * D.wyz - D.xzx;\\n\\n    vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\\n\\n    vec4 x_ = floor(j * ns.z);\\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n    vec4 x = x_ *ns.x + ns.yyyy;\\n    vec4 y = y_ *ns.x + ns.yyyy;\\n    vec4 h = 1.0 - abs(x) - abs(y);\\n\\n    vec4 b0 = vec4( x.xy, y.xy );\\n    vec4 b1 = vec4( x.zw, y.zw );\\n\\n    vec4 s0 = floor(b0)*2.0 + 1.0;\\n    vec4 s1 = floor(b1)*2.0 + 1.0;\\n    vec4 sh = -step(h, vec4(0.0));\\n\\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n    vec3 p0 = vec3(a0.xy,h.x);\\n    vec3 p1 = vec3(a0.zw,h.y);\\n    vec3 p2 = vec3(a1.xy,h.z);\\n    vec3 p3 = vec3(a1.zw,h.w);\\n\\n    //Normalise gradients\\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n    p0 *= norm.x;\\n    p1 *= norm.y;\\n    p2 *= norm.z;\\n    p3 *= norm.w;\\n\\n    // Mix final noise value\\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n    m = m * m;\\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n    dot(p2,x2), dot(p3,x3) ) );\\n}\\n\\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\\n\\nvoid main(void)\\n{\\n    vec2 uv = (gl_FragCoord.xy * ratio - .5 * u_resolution.xy * ratio)/min(u_resolution.x,u_resolution.y);\\n    vec2 m = u_mouse.xy/u_resolution.xy;\\n\\n    outColor = vec4(\\n        vec3(uv,0),\\n        1.0\\n    );\\n\\n    //outColor = vec4(1,0,1,1);\\n}\\n\";"],"sourceRoot":""}